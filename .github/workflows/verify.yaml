name: Compile, test and check the docs

on:
  push:
    branches:
      - master
      - dev
  pull_request:
  workflow_call:

jobs:

  check-formatting:

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: mrkkrp/ormolu-action@v10

  build-and-test:

    strategy:
      fail-fast: false
      matrix:
        include:
          - ghc: '8.6'
            text: '1.*'
            bytestring: '0.10.*'
          - ghc: '9.4'
            text: '2.*'
            bytestring: '0.11.*'
            ghc-options: -Werror -Wall -Wincomplete-uni-patterns -Wincomplete-record-updates -Wredundant-constraints -Wunused-packages -Wno-name-shadowing

    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v3

      - name: Setup Haskell
        uses: haskell/actions/setup@v2
        with:
          ghc-version: ${{ matrix.ghc }}
          cabal-version: 3.8

      - name: Generate cabal.project
        run: |
          echo "packages: ." >> cabal.project
          echo "constraints:" >> cabal.project
          echo "  , text == ${{ matrix.text }}" >> cabal.project
          echo "  , bytestring == ${{ matrix.bytestring }}" >> cabal.project
          cat cabal.project

      - name: Generate cabal.project.freeze
        run: cabal freeze --enable-tests --enable-benchmarks

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cabal/store
          key: ${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('cabal.project.freeze') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.ghc }}-

      - name: Install deps and compile
        run: cabal build --enable-tests --enable-benchmarks -j +RTS -A128m -n2m -N -RTS --ghc-options="${{ matrix.ghc-options }}"

      - name: Test
        run: cabal test --test-show-details always

      - name: Benchmark
        run: |
          cabal clean
          cabal bench -O2

      - name: Run Haddock
        run: cabal haddock
